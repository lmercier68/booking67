"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _6HAYK3MKcjs = require('../__chunks/6HAYK3MK.cjs');



var _YRDDHZT7cjs = require('../__chunks/YRDDHZT7.cjs');


var _AET6NN6Scjs = require('../__chunks/AET6NN6S.cjs');
require('../__chunks/LXIYFIHE.cjs');
require('../__chunks/IBMLAICP.cjs');
require('../__chunks/PH2Q5GQR.cjs');
require('../__chunks/XCM6Y3AX.cjs');


var _TUYB72LLcjs = require('../__chunks/TUYB72LL.cjs');
require('../__chunks/F7HB6RYG.cjs');


var _AX6LOJFXcjs = require('../__chunks/AX6LOJFX.cjs');
require('../__chunks/RV3PHHWM.cjs');
require('../__chunks/FQGSRSYD.cjs');
require('../__chunks/JVORNAMD.cjs');


var _2TEJFTKYcjs = require('../__chunks/2TEJFTKY.cjs');
require('../__chunks/ORT5QOHH.cjs');
require('../__chunks/KZA6P235.cjs');
require('../__chunks/QKKT6RXX.cjs');
require('../__chunks/SMKW5GKS.cjs');
require('../__chunks/7ARL6QHN.cjs');
require('../__chunks/75KXQZJX.cjs');




var _VKYTJKYNcjs = require('../__chunks/VKYTJKYN.cjs');


var _WLJVTO7Acjs = require('../__chunks/WLJVTO7A.cjs');





var _JTVNRMACcjs = require('../__chunks/JTVNRMAC.cjs');
require('../__chunks/LNE2FWJO.cjs');




var _WYXAWBLEcjs = require('../__chunks/WYXAWBLE.cjs');

// src/menu/menu-button.tsx
var _react = require('react');
var _dom = require('@ariakit/core/utils/dom');
var _misc = require('@ariakit/core/utils/misc');
var _store = require('@ariakit/core/utils/store');
var _jsxruntime = require('react/jsx-runtime');
function getInitialFocus(event, dir) {
  const keyMap = {
    ArrowDown: dir === "bottom" || dir === "top" ? "first" : false,
    ArrowUp: dir === "bottom" || dir === "top" ? "last" : false,
    ArrowRight: dir === "right" ? "first" : false,
    ArrowLeft: dir === "left" ? "first" : false
  };
  return keyMap[event.key];
}
var useMenuButton = _VKYTJKYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, focusable, accessibleWhenDisabled, showOnHover } = _b, props = _WYXAWBLEcjs.__objRest.call(void 0, _b, ["store", "focusable", "accessibleWhenDisabled", "showOnHover"]);
    const context = _YRDDHZT7cjs.useMenuProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "MenuButton must receive a `store` prop or be wrapped in a MenuProvider component."
    );
    const ref = _react.useRef.call(void 0, null);
    const parentMenu = store.parent;
    const parentMenuBar = store.menubar;
    const hasParentMenu = !!parentMenu;
    const parentIsMenuBar = !!parentMenuBar && !hasParentMenu;
    const disabled = _misc.disabledFromProps.call(void 0, props);
    _react.useEffect.call(void 0, () => {
      return _store.sync.call(void 0, store, ["disclosureElement"], (state) => {
        if (!state.disclosureElement)
          return;
        store == null ? void 0 : store.setState("disclosureElement", ref.current);
      });
    }, [store]);
    const onFocusProp = props.onFocus;
    const onFocus = _JTVNRMACcjs.useEvent.call(void 0, (event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (disabled)
        return;
      if (event.defaultPrevented)
        return;
      store == null ? void 0 : store.setAutoFocusOnShow(false);
      store == null ? void 0 : store.setActiveId(null);
      if (!parentMenuBar)
        return;
      if (!parentIsMenuBar)
        return;
      const { items } = parentMenuBar.getState();
      if (_6HAYK3MKcjs.hasExpandedMenuButton.call(void 0, items, event.currentTarget)) {
        store == null ? void 0 : store.show();
      }
    });
    const dir = store.useState(
      (state) => state.placement.split("-")[0]
    );
    const onKeyDownProp = props.onKeyDown;
    const onKeyDown = _JTVNRMACcjs.useEvent.call(void 0, (event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (disabled)
        return;
      if (event.defaultPrevented)
        return;
      const initialFocus = getInitialFocus(event, dir);
      if (initialFocus) {
        event.preventDefault();
        store == null ? void 0 : store.show();
        store == null ? void 0 : store.setAutoFocusOnShow(true);
        store == null ? void 0 : store.setInitialFocus(initialFocus);
      }
    });
    const onClickProp = props.onClick;
    const onClick = _JTVNRMACcjs.useEvent.call(void 0, (event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented)
        return;
      if (!store)
        return;
      const isKeyboardClick = !event.detail;
      const { open } = store.getState();
      if (!open || isKeyboardClick) {
        if (!hasParentMenu || isKeyboardClick) {
          store.setAutoFocusOnShow(true);
        }
        store.setInitialFocus(isKeyboardClick ? "first" : "container");
      }
      if (hasParentMenu) {
        store.show();
      }
    });
    props = _JTVNRMACcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _YRDDHZT7cjs.MenuContextProvider, { value: store, children: element }),
      [store]
    );
    if (hasParentMenu) {
      props = _WYXAWBLEcjs.__spreadProps.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, {}, props), {
        render: /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _2TEJFTKYcjs.Role.div, { render: props.render })
      });
    }
    const id = _JTVNRMACcjs.useId.call(void 0, props.id);
    const parentContentElement = _WLJVTO7Acjs.useStoreState.call(void 0, parentMenu, "contentElement");
    const role = hasParentMenu || parentIsMenuBar ? _dom.getPopupItemRole.call(void 0, parentContentElement, "menuitem") : void 0;
    const contentElement = store.useState("contentElement");
    props = _WYXAWBLEcjs.__spreadProps.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, {
      id,
      role,
      "aria-haspopup": _dom.getPopupRole.call(void 0, contentElement, "menu")
    }, props), {
      ref: _JTVNRMACcjs.useMergeRefs.call(void 0, ref, props.ref),
      onFocus,
      onKeyDown,
      onClick
    });
    props = _AX6LOJFXcjs.useHovercardAnchor.call(void 0, _WYXAWBLEcjs.__spreadProps.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, {
      store,
      focusable,
      accessibleWhenDisabled
    }, props), {
      showOnHover: (event) => {
        if (typeof showOnHover === "function")
          return showOnHover(event);
        if (showOnHover != null)
          return showOnHover;
        if (hasParentMenu)
          return true;
        if (!parentMenuBar)
          return false;
        const { items } = parentMenuBar.getState();
        return parentIsMenuBar && _6HAYK3MKcjs.hasExpandedMenuButton.call(void 0, items);
      }
    }));
    props = _AET6NN6Scjs.usePopoverDisclosure.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, {
      store,
      toggleOnClick: !hasParentMenu,
      focusable,
      accessibleWhenDisabled
    }, props));
    props = _TUYB72LLcjs.useCompositeTypeahead.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, {
      store,
      typeahead: parentIsMenuBar
    }, props));
    return props;
  }
);
var MenuButton = _VKYTJKYNcjs.createComponent.call(void 0, (props) => {
  const htmlProps = useMenuButton(props);
  return _VKYTJKYNcjs.createElement.call(void 0, "button", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  MenuButton.displayName = "MenuButton";
}



exports.MenuButton = MenuButton; exports.useMenuButton = useMenuButton;
