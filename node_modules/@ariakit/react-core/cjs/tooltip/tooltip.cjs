"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _OPSHLOSDcjs = require('../__chunks/OPSHLOSD.cjs');
require('../__chunks/KXQOQQ5B.cjs');
require('../__chunks/JA2O66IU.cjs');


var _L5APETYYcjs = require('../__chunks/L5APETYY.cjs');
require('../__chunks/YREZ6S36.cjs');
require('../__chunks/D5XLZTLO.cjs');
require('../__chunks/DJLIJTDU.cjs');
require('../__chunks/JF225FQ5.cjs');
require('../__chunks/VV6WA3I6.cjs');
require('../__chunks/DEZWSLIM.cjs');
require('../__chunks/PZL34OVO.cjs');
require('../__chunks/6IUEXB4L.cjs');
require('../__chunks/7YLCVXZ7.cjs');
require('../__chunks/5GTNIPQ6.cjs');
require('../__chunks/7TN63K2T.cjs');
require('../__chunks/PRN5A3P4.cjs');
require('../__chunks/V24PR4PW.cjs');
require('../__chunks/POBIUXYK.cjs');
require('../__chunks/G3CEEQUP.cjs');
require('../__chunks/J3OG6T3B.cjs');
require('../__chunks/AE6TH3T4.cjs');
require('../__chunks/PG7QUWN4.cjs');
require('../__chunks/CVD2AZE2.cjs');
require('../__chunks/2BIO7R5N.cjs');
require('../__chunks/2TEJFTKY.cjs');
require('../__chunks/RXGXI75N.cjs');



var _RGAVRWMYcjs = require('../__chunks/RGAVRWMY.cjs');
require('../__chunks/ORT5QOHH.cjs');
require('../__chunks/KZA6P235.cjs');
require('../__chunks/QKKT6RXX.cjs');
require('../__chunks/SMKW5GKS.cjs');
require('../__chunks/7ARL6QHN.cjs');
require('../__chunks/75KXQZJX.cjs');
require('../__chunks/QCAPQDE7.cjs');




var _VKYTJKYNcjs = require('../__chunks/VKYTJKYN.cjs');
require('../__chunks/QQNI2PXZ.cjs');
require('../__chunks/4H55S5YC.cjs');
require('../__chunks/WLJVTO7A.cjs');


var _JTVNRMACcjs = require('../__chunks/JTVNRMAC.cjs');
require('../__chunks/LNE2FWJO.cjs');




var _WYXAWBLEcjs = require('../__chunks/WYXAWBLE.cjs');

// src/tooltip/tooltip.tsx
var _dom = require('@ariakit/core/utils/dom');
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var useTooltip = _VKYTJKYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, {
      store,
      portal = true,
      gutter = 8,
      preserveTabOrder = false,
      hideOnHoverOutside = true,
      hideOnInteractOutside = true
    } = _b, props = _WYXAWBLEcjs.__objRest.call(void 0, _b, [
      "store",
      "portal",
      "gutter",
      "preserveTabOrder",
      "hideOnHoverOutside",
      "hideOnInteractOutside"
    ]);
    const context = _RGAVRWMYcjs.useTooltipProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "Tooltip must receive a `store` prop or be wrapped in a TooltipProvider component."
    );
    props = _JTVNRMACcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _RGAVRWMYcjs.TooltipScopedContextProvider, { value: store, children: element }),
      [store]
    );
    const role = store.useState(
      (state) => state.type === "description" ? "tooltip" : "none"
    );
    props = _WYXAWBLEcjs.__spreadValues.call(void 0, { role }, props);
    props = _OPSHLOSDcjs.useHovercard.call(void 0, _WYXAWBLEcjs.__spreadProps.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, {}, props), {
      store,
      portal,
      gutter,
      preserveTabOrder,
      hideOnHoverOutside: (event) => {
        if (_misc.isFalsyBooleanCallback.call(void 0, hideOnHoverOutside, event))
          return false;
        const anchorElement = store == null ? void 0 : store.getState().anchorElement;
        if (!anchorElement)
          return true;
        if ("focusVisible" in anchorElement.dataset)
          return false;
        return true;
      },
      hideOnInteractOutside: (event) => {
        if (_misc.isFalsyBooleanCallback.call(void 0, hideOnInteractOutside, event))
          return false;
        const anchorElement = store == null ? void 0 : store.getState().anchorElement;
        if (!anchorElement)
          return true;
        if (_dom.contains.call(void 0, anchorElement, event.target))
          return false;
        return true;
      }
    }));
    return props;
  }
);
var Tooltip = _L5APETYYcjs.createDialogComponent.call(void 0, 
  _VKYTJKYNcjs.createComponent.call(void 0, (props) => {
    const htmlProps = useTooltip(props);
    return _VKYTJKYNcjs.createElement.call(void 0, "div", htmlProps);
  }),
  _RGAVRWMYcjs.useTooltipProviderContext
);
if (process.env.NODE_ENV !== "production") {
  Tooltip.displayName = "Tooltip";
}



exports.Tooltip = Tooltip; exports.useTooltip = useTooltip;
