"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _KJQSD4SLcjs = require('../__chunks/KJQSD4SL.cjs');


var _P34T42GIcjs = require('../__chunks/P34T42GI.cjs');


var _UL3EZVAKcjs = require('../__chunks/UL3EZVAK.cjs');


var _QXQFY7FWcjs = require('../__chunks/QXQFY7FW.cjs');
require('../__chunks/KU7YLZWT.cjs');
require('../__chunks/ERFHNHON.cjs');
require('../__chunks/F7HB6RYG.cjs');
require('../__chunks/HY2NPBHW.cjs');
require('../__chunks/JVORNAMD.cjs');
require('../__chunks/7ARL6QHN.cjs');
require('../__chunks/75KXQZJX.cjs');




var _VKYTJKYNcjs = require('../__chunks/VKYTJKYN.cjs');
require('../__chunks/WLJVTO7A.cjs');
require('../__chunks/JTVNRMAC.cjs');
require('../__chunks/LNE2FWJO.cjs');



var _WYXAWBLEcjs = require('../__chunks/WYXAWBLE.cjs');

// src/form/form-checkbox.ts
var _misc = require('@ariakit/core/utils/misc');
var useFormCheckbox = _VKYTJKYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, name: nameProp, value, checked, defaultChecked } = _b, props = _WYXAWBLEcjs.__objRest.call(void 0, _b, ["store", "name", "value", "checked", "defaultChecked"]);
    const context = _P34T42GIcjs.useFormContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "FormCheckbox must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const checkboxStore = _QXQFY7FWcjs.useCheckboxStore.call(void 0, {
      value: store.useValue(name),
      setValue: (value2) => store == null ? void 0 : store.setValue(name, value2)
    });
    props = _UL3EZVAKcjs.useCheckbox.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, { store: checkboxStore, value, checked }, props));
    props = _KJQSD4SLcjs.useFormField.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, {
      store,
      name,
      "aria-labelledby": void 0
    }, props));
    return props;
  }
);
var FormCheckbox = _VKYTJKYNcjs.createMemoComponent.call(void 0, 
  (props) => {
    const htmlProps = useFormCheckbox(props);
    return _VKYTJKYNcjs.createElement.call(void 0, "input", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  FormCheckbox.displayName = "FormCheckbox";
}



exports.FormCheckbox = FormCheckbox; exports.useFormCheckbox = useFormCheckbox;
