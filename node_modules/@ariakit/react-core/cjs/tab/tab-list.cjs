"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";



var _HDF3U5G4cjs = require('../__chunks/HDF3U5G4.cjs');


var _6MOJZWMLcjs = require('../__chunks/6MOJZWML.cjs');
require('../__chunks/RV3PHHWM.cjs');
require('../__chunks/FQGSRSYD.cjs');
require('../__chunks/JVORNAMD.cjs');
require('../__chunks/7ARL6QHN.cjs');
require('../__chunks/75KXQZJX.cjs');




var _VKYTJKYNcjs = require('../__chunks/VKYTJKYN.cjs');


var _JTVNRMACcjs = require('../__chunks/JTVNRMAC.cjs');
require('../__chunks/LNE2FWJO.cjs');



var _WYXAWBLEcjs = require('../__chunks/WYXAWBLE.cjs');

// src/tab/tab-list.tsx
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var useTabList = _VKYTJKYNcjs.createHook.call(void 0, (_a) => {
  var _b = _a, { store } = _b, props = _WYXAWBLEcjs.__objRest.call(void 0, _b, ["store"]);
  const context = _HDF3U5G4cjs.useTabProviderContext.call(void 0, );
  store = store || context;
  _misc.invariant.call(void 0, 
    store,
    process.env.NODE_ENV !== "production" && "TabList must receive a `store` prop or be wrapped in a TabProvider component."
  );
  const orientation = store.useState(
    (state) => state.orientation === "both" ? void 0 : state.orientation
  );
  props = _JTVNRMACcjs.useWrapElement.call(void 0, 
    props,
    (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _HDF3U5G4cjs.TabScopedContextProvider, { value: store, children: element }),
    [store]
  );
  props = _WYXAWBLEcjs.__spreadValues.call(void 0, {
    role: "tablist",
    "aria-orientation": orientation
  }, props);
  props = _6MOJZWMLcjs.useComposite.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, { store }, props));
  return props;
});
var TabList = _VKYTJKYNcjs.createComponent.call(void 0, (props) => {
  const htmlProps = useTabList(props);
  return _VKYTJKYNcjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  TabList.displayName = "TabList";
}



exports.TabList = TabList; exports.useTabList = useTabList;
