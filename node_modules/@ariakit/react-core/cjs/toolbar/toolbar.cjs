"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _6MOJZWMLcjs = require('../__chunks/6MOJZWML.cjs');
require('../__chunks/RV3PHHWM.cjs');


var _7QGHCN3Dcjs = require('../__chunks/7QGHCN3D.cjs');
require('../__chunks/U74DRAW2.cjs');
require('../__chunks/W23HEISM.cjs');



var _4YG3D3TMcjs = require('../__chunks/4YG3D3TM.cjs');
require('../__chunks/FQGSRSYD.cjs');
require('../__chunks/JVORNAMD.cjs');
require('../__chunks/7ARL6QHN.cjs');
require('../__chunks/75KXQZJX.cjs');




var _VKYTJKYNcjs = require('../__chunks/VKYTJKYN.cjs');
require('../__chunks/WLJVTO7A.cjs');


var _JTVNRMACcjs = require('../__chunks/JTVNRMAC.cjs');
require('../__chunks/LNE2FWJO.cjs');



var _WYXAWBLEcjs = require('../__chunks/WYXAWBLE.cjs');

// src/toolbar/toolbar.tsx
var _jsxruntime = require('react/jsx-runtime');
var useToolbar = _VKYTJKYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, {
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    } = _b, props = _WYXAWBLEcjs.__objRest.call(void 0, _b, [
      "store",
      "orientation",
      "virtualFocus",
      "focusLoop",
      "rtl"
    ]);
    const context = _4YG3D3TMcjs.useToolbarProviderContext.call(void 0, );
    storeProp = storeProp || context;
    const store = _7QGHCN3Dcjs.useToolbarStore.call(void 0, {
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    });
    const orientation = store.useState(
      (state) => state.orientation === "both" ? void 0 : state.orientation
    );
    props = _JTVNRMACcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _4YG3D3TMcjs.ToolbarScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = _WYXAWBLEcjs.__spreadValues.call(void 0, {
      role: "toolbar",
      "aria-orientation": orientation
    }, props);
    props = _6MOJZWMLcjs.useComposite.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, { store }, props));
    return props;
  }
);
var Toolbar = _VKYTJKYNcjs.createComponent.call(void 0, (props) => {
  const htmlProps = useToolbar(props);
  return _VKYTJKYNcjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  Toolbar.displayName = "Toolbar";
}



exports.Toolbar = Toolbar; exports.useToolbar = useToolbar;
