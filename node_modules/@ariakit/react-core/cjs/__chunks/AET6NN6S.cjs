"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _LXIYFIHEcjs = require('./LXIYFIHE.cjs');


var _PH2Q5GQRcjs = require('./PH2Q5GQR.cjs');



var _KZA6P235cjs = require('./KZA6P235.cjs');




var _VKYTJKYNcjs = require('./VKYTJKYN.cjs');



var _JTVNRMACcjs = require('./JTVNRMAC.cjs');




var _WYXAWBLEcjs = require('./WYXAWBLE.cjs');

// src/popover/popover-disclosure.tsx
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var usePopoverDisclosure = _VKYTJKYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store } = _b, props = _WYXAWBLEcjs.__objRest.call(void 0, _b, ["store"]);
    const context = _KZA6P235cjs.usePopoverProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "PopoverDisclosure must receive a `store` prop or be wrapped in a PopoverProvider component."
    );
    const onClickProp = props.onClick;
    const onClick = _JTVNRMACcjs.useEvent.call(void 0, (event) => {
      store == null ? void 0 : store.setAnchorElement(event.currentTarget);
      onClickProp == null ? void 0 : onClickProp(event);
    });
    props = _JTVNRMACcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _KZA6P235cjs.PopoverScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = _WYXAWBLEcjs.__spreadProps.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, {}, props), {
      onClick
    });
    props = _PH2Q5GQRcjs.usePopoverAnchor.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, { store }, props));
    props = _LXIYFIHEcjs.useDialogDisclosure.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, { store }, props));
    return props;
  }
);
var PopoverDisclosure = _VKYTJKYNcjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = usePopoverDisclosure(props);
    return _VKYTJKYNcjs.createElement.call(void 0, "button", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  PopoverDisclosure.displayName = "PopoverDisclosure";
}




exports.usePopoverDisclosure = usePopoverDisclosure; exports.PopoverDisclosure = PopoverDisclosure;
