"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _RV3PHHWMcjs = require('./RV3PHHWM.cjs');




var _VKYTJKYNcjs = require('./VKYTJKYN.cjs');


var _JTVNRMACcjs = require('./JTVNRMAC.cjs');




var _WYXAWBLEcjs = require('./WYXAWBLE.cjs');

// src/composite/composite-input.ts




var _dom = require('@ariakit/core/utils/dom');
function getValueLength(element) {
  if (_dom.isTextField.call(void 0, element)) {
    return element.value.length;
  } else if (element.isContentEditable) {
    const range = _dom.getDocument.call(void 0, element).createRange();
    range.selectNodeContents(element);
    return range.toString().length;
  }
  return 0;
}
var useCompositeInput = _VKYTJKYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store } = _b, props = _WYXAWBLEcjs.__objRest.call(void 0, _b, ["store"]);
    const onKeyDownCaptureProp = props.onKeyDownCapture;
    const onKeyDownCapture = _JTVNRMACcjs.useEvent.call(void 0, 
      (event) => {
        onKeyDownCaptureProp == null ? void 0 : onKeyDownCaptureProp(event);
        if (event.defaultPrevented)
          return;
        const element = event.currentTarget;
        if (!element.isContentEditable && !_dom.isTextField.call(void 0, element))
          return;
        const selection = _dom.getTextboxSelection.call(void 0, element);
        if (event.key === "ArrowRight" || event.key === "ArrowDown") {
          if (selection.end !== getValueLength(element)) {
            event.stopPropagation();
          }
        } else if (event.key === "ArrowLeft" || event.key === "ArrowUp") {
          if (selection.start !== 0) {
            event.stopPropagation();
          }
        }
      }
    );
    const onFocusProp = props.onFocus;
    const onFocus = _JTVNRMACcjs.useEvent.call(void 0, (event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (event.defaultPrevented)
        return;
      _RV3PHHWMcjs.selectTextField.call(void 0, event.currentTarget);
    });
    props = _WYXAWBLEcjs.__spreadProps.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, {}, props), {
      onKeyDownCapture,
      onFocus
    });
    return props;
  }
);
var CompositeInput = _VKYTJKYNcjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = useCompositeInput(props);
    return _VKYTJKYNcjs.createElement.call(void 0, "input", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  CompositeInput.displayName = "CompositeInput";
}




exports.useCompositeInput = useCompositeInput; exports.CompositeInput = CompositeInput;
