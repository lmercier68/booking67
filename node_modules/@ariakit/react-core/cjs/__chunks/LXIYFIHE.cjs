"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _IBMLAICPcjs = require('./IBMLAICP.cjs');


var _QKKT6RXXcjs = require('./QKKT6RXX.cjs');




var _VKYTJKYNcjs = require('./VKYTJKYN.cjs');



var _WYXAWBLEcjs = require('./WYXAWBLE.cjs');

// src/dialog/dialog-disclosure.ts
var _dom = require('@ariakit/core/utils/dom');
var _misc = require('@ariakit/core/utils/misc');
var useDialogDisclosure = _VKYTJKYNcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store } = _b, props = _WYXAWBLEcjs.__objRest.call(void 0, _b, ["store"]);
    const context = _QKKT6RXXcjs.useDialogProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "DialogDisclosure must receive a `store` prop or be wrapped in a DialogProvider component."
    );
    const contentElement = store.useState("contentElement");
    props = _WYXAWBLEcjs.__spreadValues.call(void 0, {
      "aria-haspopup": _dom.getPopupRole.call(void 0, contentElement, "dialog")
    }, props);
    props = _IBMLAICPcjs.useDisclosure.call(void 0, _WYXAWBLEcjs.__spreadValues.call(void 0, { store }, props));
    return props;
  }
);
var DialogDisclosure = _VKYTJKYNcjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = useDialogDisclosure(props);
    return _VKYTJKYNcjs.createElement.call(void 0, "button", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  DialogDisclosure.displayName = "DialogDisclosure";
}




exports.useDialogDisclosure = useDialogDisclosure; exports.DialogDisclosure = DialogDisclosure;
