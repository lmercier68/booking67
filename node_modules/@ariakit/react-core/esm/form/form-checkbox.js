"use client";
import {
  useFormField
} from "../__chunks/ZF6AA2GH.js";
import {
  useFormContext
} from "../__chunks/DPO6VSJT.js";
import {
  useCheckbox
} from "../__chunks/FNSZIWLG.js";
import {
  useCheckboxStore
} from "../__chunks/JWEPAU44.js";
import "../__chunks/RVUABR2G.js";
import "../__chunks/6XBVQI3K.js";
import "../__chunks/XVQ3TNPZ.js";
import "../__chunks/BY5KOAGY.js";
import "../__chunks/KSMDNUGB.js";
import "../__chunks/HJIEYVEO.js";
import "../__chunks/SHA3WOPI.js";
import {
  createElement,
  createHook,
  createMemoComponent
} from "../__chunks/LFJDOMBA.js";
import "../__chunks/2ID5JPOO.js";
import "../__chunks/6WEF4WY5.js";
import "../__chunks/OZVWZODE.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/2SMRF6AD.js";

// src/form/form-checkbox.ts
import { invariant } from "@ariakit/core/utils/misc";
var useFormCheckbox = createHook(
  (_a) => {
    var _b = _a, { store, name: nameProp, value, checked, defaultChecked } = _b, props = __objRest(_b, ["store", "name", "value", "checked", "defaultChecked"]);
    const context = useFormContext();
    store = store || context;
    invariant(
      store,
      process.env.NODE_ENV !== "production" && "FormCheckbox must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const checkboxStore = useCheckboxStore({
      value: store.useValue(name),
      setValue: (value2) => store == null ? void 0 : store.setValue(name, value2)
    });
    props = useCheckbox(__spreadValues({ store: checkboxStore, value, checked }, props));
    props = useFormField(__spreadValues({
      store,
      name,
      "aria-labelledby": void 0
    }, props));
    return props;
  }
);
var FormCheckbox = createMemoComponent(
  (props) => {
    const htmlProps = useFormCheckbox(props);
    return createElement("input", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  FormCheckbox.displayName = "FormCheckbox";
}
export {
  FormCheckbox,
  useFormCheckbox
};
