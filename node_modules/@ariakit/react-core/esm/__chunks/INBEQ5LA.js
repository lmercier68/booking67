"use client";
import {
  usePopoverProviderContext
} from "./7CRP5UGO.js";
import {
  createComponent,
  createElement,
  createHook
} from "./LFJDOMBA.js";
import {
  useMergeRefs
} from "./6WEF4WY5.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "./2SMRF6AD.js";

// src/popover/popover-anchor.ts
var usePopoverAnchor = createHook(
  (_a) => {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = usePopoverProviderContext();
    store = store || context;
    props = __spreadProps(__spreadValues({}, props), {
      ref: useMergeRefs(store == null ? void 0 : store.setAnchorElement, props.ref)
    });
    return props;
  }
);
var PopoverAnchor = createComponent((props) => {
  const htmlProps = usePopoverAnchor(props);
  return createElement("div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  PopoverAnchor.displayName = "PopoverAnchor";
}

export {
  usePopoverAnchor,
  PopoverAnchor
};
