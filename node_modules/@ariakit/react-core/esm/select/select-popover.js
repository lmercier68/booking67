"use client";
import {
  useSelectList
} from "../__chunks/HDG2IPG7.js";
import "../__chunks/KDNXDIJO.js";
import {
  useSelectProviderContext
} from "../__chunks/6RJCEQC6.js";
import "../__chunks/7PHIY4AC.js";
import "../__chunks/6QXBPV75.js";
import "../__chunks/X3ATWMYX.js";
import "../__chunks/KSMDNUGB.js";
import {
  usePopover
} from "../__chunks/QAVVMLZP.js";
import {
  createDialogComponent
} from "../__chunks/4MXLDXAO.js";
import "../__chunks/JQ2AMQCL.js";
import "../__chunks/G5X3WBMZ.js";
import "../__chunks/YPQ27YD7.js";
import "../__chunks/6GXEOXGT.js";
import "../__chunks/TL67WVI6.js";
import "../__chunks/CU5FOQJK.js";
import "../__chunks/BULCTPRV.js";
import "../__chunks/677M2CI3.js";
import "../__chunks/MKDDWKFK.js";
import "../__chunks/72E5EPFF.js";
import "../__chunks/OOBDFMJL.js";
import "../__chunks/ZGFCAP4H.js";
import "../__chunks/X6WIMZJE.js";
import "../__chunks/3I4EOZD7.js";
import "../__chunks/QZMQZL6N.js";
import "../__chunks/UYRJLDVS.js";
import "../__chunks/5TQMQMFE.js";
import "../__chunks/LH4OUJXP.js";
import "../__chunks/7452U3HH.js";
import "../__chunks/XPF5GU3Q.js";
import "../__chunks/EAY52LAK.js";
import "../__chunks/QUBURLUM.js";
import "../__chunks/7CRP5UGO.js";
import "../__chunks/SNQAYGW2.js";
import "../__chunks/P3UIANB7.js";
import "../__chunks/HJIEYVEO.js";
import "../__chunks/SHA3WOPI.js";
import "../__chunks/B6ZZAB7E.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/LFJDOMBA.js";
import "../__chunks/XWCMZCWT.js";
import "../__chunks/4ORPOXHX.js";
import "../__chunks/2ID5JPOO.js";
import "../__chunks/6WEF4WY5.js";
import "../__chunks/OZVWZODE.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/2SMRF6AD.js";

// src/select/select-popover.ts
var useSelectPopover = createHook(
  (_a) => {
    var _b = _a, { store, alwaysVisible } = _b, props = __objRest(_b, ["store", "alwaysVisible"]);
    const context = useSelectProviderContext();
    store = store || context;
    props = useSelectList(__spreadValues({ store, alwaysVisible }, props));
    props = usePopover(__spreadValues({ store, alwaysVisible }, props));
    return props;
  }
);
var SelectPopover = createDialogComponent(
  createComponent((props) => {
    const htmlProps = useSelectPopover(props);
    return createElement("div", htmlProps);
  }),
  useSelectProviderContext
);
if (process.env.NODE_ENV !== "production") {
  SelectPopover.displayName = "SelectPopover";
}
export {
  SelectPopover,
  useSelectPopover
};
