"use client";
import {
  useHovercardDismiss
} from "../__chunks/2J2XF6WW.js";
import {
  useMenuScopedContext
} from "../__chunks/QQ7MJHYB.js";
import "../__chunks/LAO6LEBC.js";
import "../__chunks/O6OMRIAN.js";
import "../__chunks/5O7V7O3A.js";
import "../__chunks/XVQ3TNPZ.js";
import "../__chunks/X3ATWMYX.js";
import "../__chunks/KSMDNUGB.js";
import "../__chunks/B4BLW6E7.js";
import "../__chunks/7CRP5UGO.js";
import "../__chunks/SNQAYGW2.js";
import "../__chunks/P3UIANB7.js";
import "../__chunks/HJIEYVEO.js";
import "../__chunks/SHA3WOPI.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/LFJDOMBA.js";
import "../__chunks/6WEF4WY5.js";
import "../__chunks/OZVWZODE.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/2SMRF6AD.js";

// src/menu/menu-dismiss.ts
var useMenuDismiss = createHook(
  (_a) => {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useMenuScopedContext();
    store = store || context;
    props = useHovercardDismiss(__spreadValues({ store }, props));
    return props;
  }
);
var MenuDismiss = createComponent((props) => {
  const htmlProps = useMenuDismiss(props);
  return createElement("button", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  MenuDismiss.displayName = "MenuDismiss";
}
export {
  MenuDismiss,
  useMenuDismiss
};
