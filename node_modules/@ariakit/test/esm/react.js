"use client";
import "./__chunks/RHBNMDK4.js";
import {
  waitFor
} from "./__chunks/WLDGXXGP.js";
import {
  tap
} from "./__chunks/MKNCAN2F.js";
import {
  click
} from "./__chunks/5DPK2YAQ.js";
import {
  select
} from "./__chunks/H3BXHZTZ.js";
import {
  mouseUp
} from "./__chunks/LSH2PT34.js";
import {
  mouseDown
} from "./__chunks/RG2JKALK.js";
import {
  hover
} from "./__chunks/ANPGABTJ.js";
import {
  q,
  query
} from "./__chunks/HUBUFZ3U.js";
import {
  press
} from "./__chunks/UJCT5GXS.js";
import {
  type
} from "./__chunks/HVRX3U4O.js";
import {
  blur
} from "./__chunks/ZIWQZF7I.js";
import {
  focus
} from "./__chunks/WAYMNUAF.js";
import {
  dispatch
} from "./__chunks/7JP5HWUW.js";
import {
  sleep
} from "./__chunks/YNAZUNNE.js";
import {
  nextFrame,
  wrapAsync
} from "./__chunks/LHKK7Y5F.js";
import {
  __spreadProps,
  __spreadValues
} from "./__chunks/Q65FZOE2.js";

// src/react.tsx
import { StrictMode } from "react";
import * as ReactTestingLibrary from "@testing-library/react";
import { jsx } from "react/jsx-runtime";
async function render2(ui, options) {
  const wrapper = (props) => {
    const Wrapper = options == null ? void 0 : options.wrapper;
    const element = Wrapper ? /* @__PURE__ */ jsx(Wrapper, __spreadValues({}, props)) : props.children;
    if (!(options == null ? void 0 : options.strictMode))
      return element;
    return /* @__PURE__ */ jsx(StrictMode, { children: element });
  };
  return wrapAsync(async () => {
    const { unmount } = ReactTestingLibrary.render(ui, __spreadProps(__spreadValues({}, options), { wrapper }));
    await nextFrame();
    return unmount;
  });
}
export {
  blur,
  click,
  dispatch,
  focus,
  hover,
  mouseDown,
  mouseUp,
  press,
  q,
  query,
  render2 as render,
  select,
  sleep,
  tap,
  type,
  waitFor
};
